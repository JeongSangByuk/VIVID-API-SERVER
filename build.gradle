plugins {
    id 'org.springframework.boot' version '2.6.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

group = 'com.vivid'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

ext {
    set('springCloudVersion', "2021.0.1")
}

bootJar {
    archivesBaseName = 'app'
    archiveFileName = 'app.jar'
    archiveVersion = "0.0.1"
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'com.h2database:h2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.json:json:20210307'

    // aws
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
    implementation 'com.amazonaws:aws-java-sdk-dynamodb:1.12.289'
    implementation 'com.github.derjust:spring-data-dynamodb:5.1.0'

    // oauth
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'

    //swagger
    implementation 'io.springfox:springfox-boot-starter:3.0.0'

    //security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-test'

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.session:spring-session-data-redis'

    //batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // aop
    implementation 'org.springframework:spring-aop'

    //feign client
    implementation "org.springframework.cloud:spring-cloud-starter-openfeign:3.1.1"

    //Querydsl
    implementation 'com.querydsl:querydsl-jpa'
    annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java'
    annotationProcessor 'org.projectlombok:lombok'

    //JWT Dependency
    compileOnly("io.jsonwebtoken:jjwt-api:0.11.2")
    runtimeOnly("io.jsonwebtoken:jjwt-impl:0.11.2")
    runtimeOnly("io.jsonwebtoken:jjwt-jackson:0.11.2")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // testcontainers
    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.0'
    testImplementation 'org.testcontainers:junit-jupiter:1.17.3'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

//Querydsl 추가, 자동 생성된 Q클래스 gradle clean으로 제거
clean {
    delete file('src/main/generated')
}

tasks.named('test') {
    useJUnitPlatform()
}


